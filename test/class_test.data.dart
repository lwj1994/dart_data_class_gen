// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'class_test.dart';

mixin _BeanMixin {
  abstract final String name;
  abstract final List<String> list;
  abstract final List<Bean2> list2;
  abstract final Map<String, dynamic> map;
  abstract final Bean2? bean2;

  Bean copyWith({
    String? name,
    List<String>? list,
    List<Bean2>? list2,
    Map<String, dynamic>? map,
    Bean2? bean2,
  }) {
    return Bean(
      name: name ?? this.name,
      list: list ?? this.list,
      list2: list2 ?? this.list2,
      map: map ?? this.map,
      bean2: bean2 ?? this.bean2,
    );
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) {
      return true;
    }
    if (other is! Bean) {
      return false;
    }

    if (name != other.name) return false;
    if (!const DeepCollectionEquality().equals(list, other.list)) {
      return false;
    }
    if (!const DeepCollectionEquality().equals(list2, other.list2)) {
      return false;
    }
    if (!const DeepCollectionEquality().equals(map, other.map)) {
      return false;
    }
    if (bean2 != other.bean2) return false;
    return true;
  }

  @override
  int get hashCode =>
      name.hashCode ^
      const DeepCollectionEquality().hash(list) ^
      const DeepCollectionEquality().hash(list2) ^
      const DeepCollectionEquality().hash(map) ^
      bean2.hashCode;

  Map<String, dynamic> toMap() => {
        'name': name,
        'list': list,
        'list2': list2,
        'map': map,
        'bean2': bean2,
      };
}

mixin _Bean3 {
  abstract final String name;

  Bean3 copyWith({
    String? name,
  }) {
    return Bean3(
      name: name ?? this.name,
    );
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) {
      return true;
    }
    if (other is! Bean3) {
      return false;
    }

    if (name != other.name) return false;
    return true;
  }

  @override
  int get hashCode => name.hashCode;

  Map<String, dynamic> toMap() => {
        'name': name,
      };
}
