// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'class_test.dart';

mixin BeanDataClassMixin {
  abstract final String name;
  abstract final List<String> list;
  abstract final List<Bean2> list2;
  abstract final Map<String, dynamic> map;
  abstract final Bean2? bean2;

  Bean copyWith({
    String? name,
    List<String>? list,
    List<Bean2>? list2,
    Map<String, dynamic>? map,
    Bean2? bean2,
  }) {
    return Bean(
      name: name ?? this.name,
      list: list ?? this.list,
      list2: list2 ?? this.list2,
      map: map ?? this.map,
      bean2: bean2 ?? this.bean2,
    );
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) {
      return true;
    }
    if (other is! Bean) {
      return false;
    }

    if (name != other.name) return false;
    if (!const DeepCollectionEquality().equals(list, other.list)) {
      return false;
    }
    if (!const DeepCollectionEquality().equals(list2, other.list2)) {
      return false;
    }
    if (!const DeepCollectionEquality().equals(map, other.map)) {
      return false;
    }
    if (bean2 != other.bean2) return false;
    return true;
  }

  @override
  int get hashCode =>
      name.hashCode ^
      const DeepCollectionEquality().hash(list) ^
      const DeepCollectionEquality().hash(list2) ^
      const DeepCollectionEquality().hash(map) ^
      bean2.hashCode;

  Map<String, dynamic> toMap() => {
    'name': name,
    'list': list,
    'list2': list2,
    'map': map,
    'bean2': bean2,
  };

  static Bean fromMap(Map<String, dynamic> map) {
    return Bean(
      name: Bean.redValue(map, '"name2"')?.toString() ?? "a",
      list:
          (map['list'] != null
              ? (map['list'] as List<dynamic>?)
                  ?.map((e) => e.toString())
                  .toList()
              : null) ??
          const [],
      list2:
          (map['list2'] != null
              ? (map['list2'] as List<dynamic>?)
                  ?.map((e) => Bean2.fromMap(e))
                  .toList()
              : null) ??
          const [],
      map: (map['map'] as Map<String, dynamic>?) ?? const {},
      bean2: map['bean2'] != null ? Bean2?.fromMap(map['bean2']) : null,
    );
  }
}
